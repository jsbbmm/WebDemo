JavaWe开发笔记：
              学习任何一个东西：前提都是背下来的！代码也一样，背多了，什么都会了
1：pageContext javax.servlet.jsp.PageContext 类型       jsp的页面容器
2：request     javax.servlet.http.HttpServletRequest 得到用户的请求信息
3：response    javax.servlet.http.HttpServletResponse 服务器向客服端的回应消息
4：session     javax.servlet.http.HttpSession   用来保存每一个用户的信息
5：application javax.servlet.ServletContext   表示所有用户的共享信息
6：config      javax.servlet.ServletConfig    服务器配置，可以取得初始化参数
7：out         javax.servlet.jsp.JspWriter    页面输出
8：page        java.lang.Object              表示从该页面中表示出来的一个servlet实例
9：exception   java.lang.Throwable           表示jsp页面所发生的异常，在错误页面中起作用


四中范围：
page范围：通过pageConext设置，只在一个页面中保存属性跳转之后无效
request范围：服务器跳转之后依然有效
session范围：一次回话中，不管怎么跳转都有效，一个人的信息
application范围：这个服务器的所有用户都有效

上面的四个范围都存在下面四个方法：
setAttribute(String name,Object o)
getAttribute(String name)
removeAttribute(String name)

服务器端跳转：地址栏不变  jsp:forward
客服端跳转：地址栏变  比如 a标签

***能使用page范围的，就不用要request
pageContext是可以设置四中属性范围的
PageContext.REQUEST_SCOPE；
PageContext.PAGE_SCOPE;
PageContext.SESSION_SCOPE;
PageContext.APPLICTION_SCOPE;




1:request对象：主要用来接收客服端发送过来的请求信息
	  request.setCharacterEncoding("gbk");解决百分之八十的乱码问题
	  HttpServletRequest 继承：ServletRequest
	  request可以获取表单传递过来也可以通过地址重写传递过来
	     表单提交方式：get:地址栏会显示参数内容   post：地址栏不会改变
	     因为地址栏长度是有限制的，所以表单提交尽量都用post方式
	    直接输入地址属于get方式提交
	  String path = request.getServletPath();
	  String contextPath 
	  <h3>上下文路径<%=contextPath %></h3>
	  <h3>一个页面的完整路径：<%=contextPath %><%=path %></h3>  
              如果使用getAttribute(),之前一定存在setAttribute()操作
             如果使用getParamter(),存在以下几种情况：
    1，表单提交, 2，地址重写，3，通过<jsp:include><jsp:forward>传递而来的参数
    
2:response对象：服务器对客服端的回应，将web服务器处理后的结果发给客服端
    javax.servlet.http.HttpServletResopnse接口实例
          非常重要的三个方法：addCookie(Cookie cookie), setHeader(String name)
          地址栏变了就属于客服端跳转了，客服端跳转就无法传递request属性范围内容的东西了
          地址栏不变就属性服务器端跳转了
    response.sendRedirect():属于客服端跳转，跳转之后不传递request属性了
    <jsp:forward>属性服务器端跳转
3：Cookie    setMaxAge（）设置cookie生命周期

4： session  :javax.servlet.http.HttpSession 接口 
     涉及的主要方法：getId(),getCreationTime(),getLastAccessedtime(),
             isNew(),invalidate(),getAttributenames();          
    
    













